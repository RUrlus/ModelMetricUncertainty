name: Wheels

on:
  workflow_dispatch:
  release:
    types:
      - published
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - stable

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install deps
      run: python -m pip install twine build

    - name: Build SDist
      run: python -m build -s

    - name: Check metadata
      run: twine check dist/*

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  build_apple_silicon_wheels:
    if: github.event.pull_request.draft == false
    name: MacOS ARM Wheels
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel

    - name: Build wheel
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_ENVIRONMENT: CMAKE_ARGS="-DMMU_ENABLE_ARCH_FLAGS=OFF -DMMU_CICD_MODE=ON"
        CIBW_BUILD: 'cp38-* cp39-* cp310-* cp311-*'
        CIBW_TEST_EXTRAS: test
        CIBW_TEST_COMMAND: python -m pytest {project}/tests/api
        CIBW_ARCHS: "arm64"

    - name: Show files
      run: ls -lh wheelhouse
      shell: bash

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl

  build_wheels:
    if: github.event.pull_request.draft == false
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install cibuildwheel
      run: python3 -m pip install cibuildwheel

    - name: Build wheel
      run: python3 -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET="10.13" CMAKE_ARGS="-DMMU_ENABLE_ARCH_FLAGS=OFF -DMMU_CICD_MODE=ON"
        CIBW_BUILD: 'cp37-* cp38-* cp39-* cp310-* cp311-*'
        CIBW_TEST_EXTRAS: test
        CIBW_TEST_COMMAND: python -m pytest {project}/tests/api
        CIBW_ARCHS: "auto64"
        CIBW_ARCHS_MACOS: "x86_64"
        # Skip 32-bit builds
        CIBW_SKIP: "*-arm64 *-win32 *-manylinux_i686 *-musllinux_x86_64"

    - name: Show files
      run: ls -lh wheelhouse
      shell: bash

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist, build_apple_silicon_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.6.1
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
